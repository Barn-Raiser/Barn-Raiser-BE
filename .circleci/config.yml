version: 2.1 # Use 2.1 to enable using orbs and other features.

# Declare the orbs that we'll use in our config.
# read more about orbs: https://circleci.com/docs/2.0/using-orbs/
orbs:
  ruby: circleci/ruby@1.0

jobs:
  build: # our first job, named "build"
    docker:
      - image: circleci/ruby:2.7.2
    steps:
      - checkout # pull down our git code.
      - ruby/install-deps # use the ruby orb to install dependencies

  test:  # our next job, called "test"
    # we run "parallel job containers" to enable speeding up our tests;
    # this splits our tests across multiple containers.
    parallelism: 3
    # here we set TWO docker images.
    docker:
      - image: circleci/ruby:2.7.2
      - image: cimg/postgres:13.3
        environment: # add POSTGRES environment variables.
          TZ: "America/Denver"
          POSTGRES_USER: barn_raiser_be
          POSTGRES_DB: barn_raiser_be_test
          POSTGRES_PASSWORD: password
    # environment variables specific to Ruby/Rails, applied to the primary container.
    environment:
      TZ: "America/Denver"
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      PGHOST: 127.0.0.1
      PGUSER: barn_raiser_be
      PGPASSWORD: password
      RAILS_ENV: test
    # A series of steps to run, some are similar to those in "build".
    steps:
      - checkout
      - ruby/install-deps
      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Run rspec
          command: bundle exec rspec

# We use workflows to orchestrate the jobs that we declared above.
workflows:
  version: 2
  build_and_test:     # The name of our workflow is "build_and_test"
    jobs:             # The list of jobs we run as part of this workflow.
      - build         # Run build first.
      - test:         # Then run test,
          requires:   # Test requires that build passes for it to run.
            - build   # Finally, run the build job.







#andrew's version
# version: 2.1
# orbs:
#   ruby: circleci/ruby@0.1.2
#
# jobs:
#   build:
#     docker:
#       - image: circleci/ruby:2.7.2
#
#
#     executor: ruby/default
#     steps:
#       - checkout
#       - run:
#           name: Configure Bundler
#           command: |
#             echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
#             source $BASH_ENV
#             gem install bundler
#       # - run:
#       #     name: Which bundler?
#       #     command: bundle -v
#       - ruby/bundle-install
#
#       -rspec/
